<%- include("../partials/admin/admin-header") %>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            padding-left: 300px;
            padding-top: 100px;
        }

        .thumbnails-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin: 10px 0;
        }

        .thumbnail {
            position: relative;
            width: 100px;
            height: 100px;
        }

        .thumbnail img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 4px;
        }

        .error-message {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: none;
        }

        .image-preview {
            max-width: 100%;
            max-height: 300px;
            margin: 10px 0;
        }

        .cropper-container {
            margin: 15px 0;
        }

        .image-actions {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }

        .delete-image {
            cursor: pointer;
            position: absolute;
            top: -8px;
            right: -8px;
            background: #dc3545;
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
        }
        
        /* Basic Reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Container and Card Styling */
.content-main {
    padding: 30px;
    background-color: #f9f9f9;
}

.card {
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.card-header {
    background-color: #f1f1f1;
    padding: 15px;
    border-radius: 8px 8px 0 0;
}

.card-body {
    padding: 20px;
}

/* Title Styling */
.content-title {
    font-size: 1.75rem;
    font-weight: 600;
    color: #333;
}

/* Form Styling */
.form-label {
    font-size: 1rem;
    font-weight: 500;
    color: #333;
    margin-bottom: 8px;
}

.form-control {
    width: 100%;
    padding: 10px;
    border-radius: 8px;
    border: 1px solid #ddd;
    font-size: 1rem;
    margin-bottom: 20px;
    transition: border 0.3s;
}

.form-control:focus {
    outline: none;
    border: 1px solid #5cb85c;
}

.form-select {
    width: 100%;
    padding: 10px;
    border-radius: 8px;
    border: 1px solid #ddd;
    font-size: 1rem;
    background-color: #fff;
}

.form-select:focus {
    outline: none;
    border: 1px solid #5cb85c;
}

/* Error Messages */
.error-message {
    font-size: 0.875rem;
    color: #ff4d4d;
    margin-top: 5px;
}

/* Button Styling */
.btn {
    padding: 12px 20px;
    border-radius: 8px;
    border: none;
    font-size: 1rem;
    cursor: pointer;
}

.btn-primary {
    background-color: #007bff;
    color: #fff;
}

.btn-primary:hover {
    background-color: #0056b3;
}

/* Image Thumbnails */
.thumbnails-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 20px;
}

.thumbnail {
    position: relative;
    max-width: 100px;
    height: 100px;
    overflow: hidden;
    border-radius: 8px;
}

.thumbnail img {
    width: 100%;
    height: auto;
}

.delete-image {
    position: absolute;
    top: 5px;
    right: 5px;
    background-color: rgba(0, 0, 0, 0.7);
    color: #fff;
    border-radius: 50%;
    padding: 5px;
    cursor: pointer;
}

.delete-image:hover {
    background-color: rgba(0, 0, 0, 0.9);
}

/* Image Cropper */
.image-cropper {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
}

.image-actions {
    display: flex;
    gap: 10px;
}

.image-preview {
    max-width: 200px;
    margin-top: 10px;
    border-radius: 8px;
}

/* Spacing for Buttons and Inputs */
.mb-4 {
    margin-bottom: 20px;
}

.text-end {
    text-align: right;
}

.row {
    margin-bottom: 20px;
}

.col-lg-4 {
    padding: 0 15px;
}

/* Responsive Design */
@media (max-width: 768px) {
    .col-lg-4 {
        width: 100%;
    }

    .col-sm-6 {
        width: 100%;
    }

    .row {
        display: block;
    }
}
    

    </style>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>

<section class="content-main">
    <div class="row">
        <div class="col-9">
            <div class="content-header">
                <h2 class="content-title">Edit Product</h2>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="post" action="/admin/editProduct/<%=product._id %>" enctype="multipart/form-data" id="editProductForm">
                        <!-- Product Name -->
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" name="productName" value="<%=product.productName %>" class="form-control" id="product_name" >
                            <div id="productName-error" class="error-message"></div>
                        </div>

                        <!-- Description -->
                        <div class="mb-4">
                            <label class="form-label">Description</label>
                            <textarea name="descriptionData" class="form-control" rows="4" ><%=product.description %></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>

                        <!-- Prices and Quantity -->
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular Price</label>
                                    <input type="number" name="regularPrice" value="<%=product.regularPrice %>" class="form-control"  min="0" step="0.01">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale Price</label>
                                    <input type="number" name="salePrice" value="<%=product.salePrice %>" class="form-control" min="0" step="0.01">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Quantity</label>
                                    <input type="number" name="quantity" value="<%=product.quantity %>" class="form-control"  min="0">
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>

                        <!-- Color -->
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Color *</label>
                                    <input type="text" name="color" value="<%=product.color %>" class="form-control" >
                                    <div id="color-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>

                        <!-- Category -->
                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-select" name="category" >
                                            <% for(let i=0; i<category.length; i++) { %>
                                                <option value="<%=category[i]._id %>" 
                                                    <%= product.category.toString() === category[i]._id.toString() ? 'selected' : '' %>>
                                                    <%=category[i].name %>
                                                </option>
                                            <% } %>
                                        </select>
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="mb-4">
                            <label for="status" class="form-label">Status</label>
                            <select name="status" class="form-select" id="status">
                                <option value="In stock" <%= product.status === 'In stock' ? 'selected' : '' %>>In stock</option>
                                <option value="Out of stock" <%= product.status === 'Out of stock' ? 'selected' : '' %>>Out of stock</option>
                                <option value="Discontinued" <%= product.status === 'Discontinued' ? 'selected' : '' %>>Discontinued</option>
                            </select>
                            <div id="status-error" class="error-message"></div>
                        </div>
                        

                        <!-- Images -->
                        <div class="card mb-4">
                            <div class="card-header">
                                <h4>Product Images</h4>
                            </div>
                            <div class="card-body">
                                        <!-- Existing Images -->
                                <div class="thumbnails-container">
                                    <% for(let i=0; i<product.productImage.length; i++) { %>
                                        <div class="thumbnail">
                                            <img src="/uploads/resized-images/<%=product.productImage[i] %>" alt="Product image">
                                            <span class="delete-image" 
                                                onclick="deleteSingleImage('<%=product.productImage[i] %>', '<%=product._id%>')">
                                                ×
                                            </span>
                                        </div>
                                    <% } %>
                                </div>


                                 <!-- Single New Image Upload -->
                                    <div class="mb-4">
                                        <label class="form-label">New Image</label>
                                        <input type="file" 
                                            class="form-control" 
                                            name="images" 
                                            id="inputImage" 
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="handleImageUpload(event)">
                                        <img src="" alt="" id="imgView" class="image-preview">
                                        <div class="image-cropper" style="display: none;">
                                            <img src="" id="croppedImg" alt="">
                                            <div class="image-actions">
                                                <button type="button" class="btn btn-primary btn-sm" id="saveButton">
                                                    Save Crop
                                                </button>
                                                <button type="button" class="btn btn-secondary btn-sm" onclick="cancelCrop()">
                                                    Cancel
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                            </div>
                        </div>

                        <!-- Submit Button -->
                        <div class="text-end">
                            <button class="btn btn-primary" type="submit" id="updateBtn">
                                Update Product
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>
    let cropper;
    const maxImages = 3;
    let croppedImages = []; // Store cropped images

// Count uploaded images
function getCurrentImageCount() {
    return document.querySelectorAll('.thumbnails-container .thumbnail').length;
}



    // Form validation
    document.getElementById('editProductForm').addEventListener('submit', function(e) {
        e.preventDefault();
        if (validateForm()) {
            this.submit();
        }
    });

    function validateForm() {
        clearErrorMessages();
        let isValid = true;

        //  fields validation
        const fields = {
            'productName': 'Please enter a product name',
            'descriptionData': 'Please enter a product description',
            'regularPrice': 'Please enter a valid regular price',
            'quantity': 'Please enter a valid quantity',
            'color': 'Please enter a color',
            'category': 'Please select a category'
        };

        for (let [fieldName, errorMessage] of Object.entries(fields)) {
            const field = document.getElementsByName(fieldName)[0];
            if (!field.value.trim()) {
                displayErrorMessage(`${fieldName}-error`, errorMessage);
                isValid = false;
            }
        }

        // Price validation
        const regularPrice = parseFloat(document.getElementsByName('regularPrice')[0].value);
        const salePrice = parseFloat(document.getElementsByName('salePrice')[0].value);

        if (isNaN(regularPrice) || regularPrice < 0) {
            displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price');
            isValid = false;
        }

        if (salePrice && (isNaN(salePrice) || salePrice < 0 || salePrice > regularPrice)) {
            displayErrorMessage('salePrice-error', 'Sale price must be less than regular price');
            isValid = false;
        }

        // Quantity validation
        const quantity = parseInt(document.getElementsByName('quantity')[0].value);
        if (isNaN(quantity) || quantity < 0) {
            displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity');
            isValid = false;
        }

        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        const errorElement = document.getElementById(elementId);
        if (errorElement) {
            errorElement.textContent = message;
            errorElement.style.display = 'block';
        }
    }

    function clearErrorMessages() {
        document.querySelectorAll('.error-message').forEach(element => {
            element.textContent = '';
            element.style.display = 'none';
        });
    }





   // Image upload and crop
function handleImageUpload(event) {
    const files = event.target.files; // Handle multiple files
    if (!files.length) return;

    // Check if max limit is reached
    if (getCurrentImageCount() + files.length > maxImages) {
        Swal.fire({
            icon: 'warning',
            title: 'Max Limit Reached',
            text: 'You can only upload up to 3 images.',
        });
        event.target.value = ''; // Clear input
        return;
    }

    // Loop through selected files
    Array.from(files).forEach(file => {
        // Validate file type and size
        const validTypes = ['image/jpeg', 'image/png', 'image/jpg'];
        if (!validTypes.includes(file.type)) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid File Type',
                text: 'Please upload a valid image file (JPEG, PNG, JPG).',
            });
            event.target.value = '';
            return;
        }

        if (file.size > 5 * 1024 * 1024) { // 5MB limit
            Swal.fire({
                icon: 'error',
                title: 'File Too Large',
                text: 'Image size should be less than 5MB.',
            });
            event.target.value = '';
            return;
        }

        // Show image preview in cropper
        const reader = new FileReader();
        reader.onload = function(e) {
            const image = document.getElementById('imgView');
            image.src = e.target.result;

            // Destroy old cropper if exists
            if (cropper) {
                cropper.destroy();
            }

            // Initialize cropper
            cropper = new Cropper(image, {
                aspectRatio: 1,
                viewMode: 1,
                guides: true,
                background: false,
                autoCropArea: 1,
                responsive: true,
                minContainerWidth: 300,
                minContainerHeight: 200,
            });

            // Show cropper container
            document.querySelector('.image-cropper').style.display = 'block';
        };
        reader.readAsDataURL(file);
    });
}

// Cancel cropping
function cancelCrop() {
    if (cropper) {
        cropper.destroy();
        cropper = null;
    }
    document.getElementById('inputImage').value = '';
    document.getElementById('imgView').src = '';
    document.querySelector('.image-cropper').style.display = 'none';
}




// Save cropped image
document.getElementById('saveButton').addEventListener('click', function() {
    if (!cropper) return;

    const canvas = cropper.getCroppedCanvas();
    canvas.toBlob(blob => {
        const fileName = `cropped-${Date.now()}.jpg`;
        const file = new File([blob], fileName, { type: 'image/jpeg' });

        // Ensure we don't exceed 3 images
        if (getCurrentImageCount() + 1 > maxImages) {
            Swal.fire({
                icon: 'warning',
                title: 'Max Limit Reached',
                text: 'You can only upload up to 3 images.',
            });
            return;
        }

        // Add cropped image to the array
        croppedImages.push(file);

        // Create thumbnail preview for this cropped image
        const previewContainer = document.querySelector('.thumbnails-container');
        const imgElement = document.createElement('img');
        imgElement.src = URL.createObjectURL(blob);
        imgElement.classList.add('thumbnail');
        previewContainer.appendChild(imgElement);

        // Update file input with the new image
        const dataTransfer = new DataTransfer();
        croppedImages.forEach(image => dataTransfer.items.add(image)); // Add all cropped images
        document.getElementById('inputImage').files = dataTransfer.files;

        // Hide cropper and reset
        cropper.destroy();
        cropper = null;
        document.querySelector('.image-cropper').style.display = 'none';
    }, 'image/jpeg');
});

// Delete image
function deleteSingleImage(imageName, productId) {
    if (!confirm('Are you sure you want to delete this image?')) {
        return;
    }

    $.ajax({
        url: '/admin/deleteImage',
        method: 'POST',
        data: {
            imageNameToServer: imageName,
            productIdToServer: productId
        },
        success: function(response) {
            if (response.status) {
                window.location.reload();
            } else {
                alert('Failed to delete image. Please try again.');
            }
        },
        error: function() {
            alert('An error occurred while deleting the image.');
        }
    });
}

</script>

<%- include("../partials/admin/admin-footer") %>