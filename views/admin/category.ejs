<%- include("../partials/admin/admin-header")Â %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
 
  <style>
     body {
      font-family: 'Poppins', Arial, sans-serif;
      margin: 0;
      padding: 0;
      padding-left: 250px;
      background-color: #f5f7fa;
      color: #495057;
    }

    .content-main {
      margin: 120px auto 60px auto;
      padding: 30px;
      max-width: 1200px;
      background-color: #fff;
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
      border-radius: 15px;
    }

    .content-header {
      text-align: center;
      margin-bottom: 40px;
    }

    .content-title {
      font-size: 2.5rem;
      font-weight: 600;
      color: #343a40;
      text-transform: uppercase;
    }

    .form-control {
      width: 100%;
      padding: 12px;
      margin-bottom: 15px;
      border: 1px solid #ddd;
      border-radius: 8px;
      box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.05);
      transition: border-color 0.3s;
    }

    .form-control:focus {
      border-color: #007bff;
      outline: none;
      box-shadow: 0 0 8px rgba(0, 123, 255, 0.2);
    }

    .btn-primary {
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 8px;
      padding: 12px 25px;
      cursor: pointer;
      font-size: 1rem;
      font-weight: 500;
      text-transform: uppercase;
      transition: background-color 0.3s ease, box-shadow 0.3s ease;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      box-shadow: 0 4px 8px rgba(0, 91, 187, 0.3);
    }

    .table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    .table th, .table td {
      text-align: left;
      padding: 15px;
      border: 1px solid #ddd;
      font-size: 0.95rem;
    }

    .table th {
      background-color: #f8f9fa;
      color: #495057;
      font-weight: 600;
    }

    .badge {
      padding: 7px 12px;
      border-radius: 8px;
      font-size: 0.9rem;
      text-transform: uppercase;
    }

    .alert-success {
      background-color: #28a745;
      color: #fff;
    }

    .alert-danger {
      background-color: #dc3545;
      color: #fff;
    }


    .error-message {
      color: red;
      font-size: 0.85rem;
      margin-top: 5px;
    }

    .btn-info {
      background-color: #17a2b8;
      color: #fff;
      border: none;
      border-radius: 8px;
      padding: 8px 16px;
      transition: 0.3s;
    }

    .btn-info:hover {
      background-color: #138496;
    }

    .btn-danger {
      background-color: #dc3545;
      color: #fff;
      border: none;
      border-radius: 8px;
      padding: 8px 16px;
      transition: 0.3s;
    }

    .btn-danger:hover {
      background-color: #c82333;
    }

    .btn-success {
      background-color: #28a745;
      color: #fff;
      border: none;
      border-radius: 8px;
      padding: 8px 16px;
      transition: 0.3s;
    }

    .btn-success:hover {
      background-color: #218838;
    }

    @media (max-width: 768px) {
      .content-main {
        padding: 20px;
      }

      .table th, .table td {
        font-size: 0.85rem;
      }

      .btn {
        font-size: 0.9rem;
      }
    }

    .pagination-container {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 6px;
    margin-top: 20px;
  }

  .pagination-container a,
  .pagination-container .current-page {
    text-decoration: none;
    padding: 8px 12px;
    border-radius: 5px;
    font-size: 14px;
    font-weight: 500;
    transition: 0.2s ease-in-out;
    border: 1px solid #007bff;
  }

  .pagination-container a {
    background: white;
    color: #007bff;
  }

  .pagination-container a:hover {
    background: #007bff;
    color: white;
  }

  .pagination-container .current-page {
    background: #007bff;
    color: white;
    border: none;
    font-weight: bold;
  }

  .modal {
            display: none; /* Hidden by default */
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5); /* Transparent black overlay */
        }

        .modal-content {
            background-color: white;
            width: 50%;
            margin: 15% auto;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            position: relative;
        }

        /* Close Button */
        .close-btn {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 20px;
            cursor: pointer;
        }

        .close-btn:hover {
            color: red;
        }

        /* Form Styles */
        .modal-form {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .modal-form input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .modal-form button {
            padding: 10px;
            border: none;
            background-color: blue;
            color: white;
            border-radius: 5px;
            cursor: pointer;
        }

        .modal-form button:hover {
            background-color: darkblue;
        }

        .text-danger {
        color: red;
        font-size: 14px;
        font-weight: bold;
        display: block;
        margin-top: 5px;
        }   


  </style>

</head>
<body>
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Category</h2>
      </div>
    </div>
    <% if(typeof message !== 'undefined'){ %>
      <p style="color: red; text-align: center;" ><%= message %></p>
  <% } %>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form onsubmit="handelFormSubmit(event)" novalidate>
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" required/>
                <div id="name-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" required></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">
                  Create category
                </button>
              </div>
            </form>
          </div>
          <div class="col-md-8 ml-10">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th class="text-center"></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Status</th>
                    <th class="text-start">Listing</th>
                    <th>Edit</th>
                    <th>Offer(%)</th>
                    <th>Edit Offer</th>
                  </tr>
                </thead>
                <tbody>
                  <% cat.reverse().forEach((category,index)=>{%>
                  <tr>
                    <td></td>
                    <td class="text-start"><%=category.name %></td>
                    <td class="text-start"><%=category.description %></td>
                      <!-- <td>
                        
                      </td> -->
                    <!-- <td class="text-start">
                      <button class="btn btn-info" style="width: 100px">
                        <a href="#" class="text-white">Add Offer</a>
                      </button>
                      <button class="btn btn-info"style="width: 100px">
                        <a href="#" class="text-white">Remove</a>
                      </button>
                    </td> -->
                    <td class="text-start">
                      <% if(category.isListed){ %>
                      <span class="badge rounded-pill alert-success" style="width: 60px">Listed</span>
                      <% }else{ %>
                      <span class="badge rounded-pill alert-danger" style="width: 60px">Unlisted</span>
                      <% } %>
                    </td>
                    <td class="text-start">
                      <% if(category.isListed){ %>
                        <button class="btn btn-danger" style="width: 70px" 
                                onclick="confirmAction('<%= category._id %>', 'unlist')">
                          Unlist
                        </button>
                      <% } else { %>
                        <button class="btn btn-success" style="width: 70px" 
                                onclick="confirmAction('<%= category._id %>', 'list')">
                          List
                        </button>
                      <% } %>
                    </td>
                    <td class="text-start">
                      <a href="/admin/editCategory/<%=category._id %>" class="btn btn-info text-white">Edit</a>
                    </td>

                    <td class="text-start">
                      <%=category.categoryOffer || 0  %>
                    </td>                    

                    <td>
                      <% if (category.categoryOffer && category.categoryOffer > 0) { %>
                        <button onclick="removeOffer('<%= category._id %>')" class="btn btn-danger" style="width: 100px; color: white; background-color: #dc3545; border: none;">Remove Offer</button>
                    <% } else { %>
                        <button onclick="openModal('<%= category._id %>')" class="btn btn-success" style="width: 100px; color: white; background-color: #28a745; border: none;">Add Offer</button>
                    <% } %>                  
                   </td>

                  </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>


    <div id="offerModal" class="modal">
      <div class="modal-content">
          <span class="close-btn" onclick="closeModal()">&times;</span>
          <h2>Set Offer Details</h2><br>

          <form id="offerForm" class="modal-form">
              <label for="offer">Offer (%)</label>
              <input type="number" id="offer" name="offer" placeholder="Enter offer percentage">
              <span id="offerError" class="text-danger"></span>

              <label for="endDate">End Date</label>
              <input type="date" id="endDate" name="endDate">
              <span id="endDateError" class="text-danger"></span>

              <!-- Changed button type to submit -->
              <button type="submit">Save Offer</button> 
          </form>
      </div>
  </div>


    <div class="pagination-container">
      <% if (currentPage > 1) { %>
        <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
      <% } %> 
      <% for (let i = 1; i <= totalPages; i++) { %> 
        <% if (i === currentPage) { %>
          <span class="current-page"><%= i %></span>
        <% } else { %>
          <a href="?page=<%= i %>"><%= i %></a>
        <% } %> 
      <% } %> 
      <% if (currentPage < totalPages) { %>
        <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
      <% } %>
    </div>
    
      
  </section>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  
  <script>

      let selectedCategoryId = null;

      function openModal(categoryId) {
        selectedCategoryId = categoryId;
          document.getElementById("offerModal").style.display = "block";
          document.getElementById("offerError").textContent = "";
          document.getElementById("endDateError").textContent = "";
      }

      function closeModal() {
          document.getElementById("offerModal").style.display = "none";
          document.getElementById("offerError").textContent = "";
          document.getElementById("endDateError").textContent = "";
      }

      window.onclick = function (event) {
          let modal = document.getElementById("offerModal");
          if (event.target === modal) {
              closeModal();
          }
      };

      document.getElementById("offerForm").addEventListener("submit", submitOffer);


      document.getElementById("offer").addEventListener("input", function () {
          document.getElementById("offerError").textContent = "";
      });

      document.getElementById("endDate").addEventListener("input", function () {
          document.getElementById("endDateError").textContent = "";
      });

      async function submitOffer(event) {
          event.preventDefault();

          const offerValue = document.getElementById("offer").value.trim();
          const endDateValue = document.getElementById("endDate").value.trim();
          const today = new Date().toISOString().split("T")[0];

          let isValid = true;
          document.getElementById("offerError").textContent = "";
          document.getElementById("endDateError").textContent = "";

          if (!offerValue) {
              document.getElementById("offerError").textContent = "Offer cannot be empty.";
              isValid = false;
          } else if (isNaN(offerValue) || offerValue < 1 || offerValue > 100) {
              document.getElementById("offerError").textContent = "Offer must be between 1% and 100%.";
              isValid = false;
          }

          if (!endDateValue) {
              document.getElementById("endDateError").textContent = "End date is required.";
              isValid = false;
          } else if (endDateValue < today) {
              document.getElementById("endDateError").textContent = "End date must be in the future.";
              isValid = false;
          }

          if (!selectedCategoryId) {
              Swal.fire({
                  title: "Error!",
                  text: "Product ID is missing.",
                  icon: "error",
                  confirmButtonText: "OK"
              });
              return;
          }

          if (!isValid) return;

          const confirmation = await Swal.fire({
              title: "Are you sure?",
              text: `You are about to add an offer of ${offerValue}% valid until ${endDateValue}.`,
              icon: "warning",
              showCancelButton: true,
              confirmButtonText: "Yes, add offer!",
              cancelButtonText: "Cancel",
              reverseButtons: true
          });

          if (!confirmation.isConfirmed) return;

          try {
              const response = await fetch("/admin/addCatOffer", {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({ offer: offerValue, endDate: endDateValue, categoryId: selectedCategoryId })
              });

              const result = await response.json();

              if (result.success) {
                  Swal.fire({
                      title: "Success!",
                      text: result.message,
                      icon: "success",
                      confirmButtonText: "OK"
                  }).then(() => {
                      closeModal();
                      window.location.reload();
                  });
              } else {
                  Swal.fire({
                      title: "Error!",
                      text: result.message || "Failed to add offer.",
                      icon: "error",
                      confirmButtonText: "OK"
                  });
              }
          } catch (error) {
              console.error("Error submitting offer:", error);
              Swal.fire({
                  title: "Error!",
                  text: "Something went wrong. Please try again.",
                  icon: "error",
                  confirmButtonText: "OK"
              });
          }
}


    async function removeOffer(categoryId) {
        const confirmation = await Swal.fire({
            title: "Are you sure?",
            text: `Do you want to remove the offer.`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, remove offer!",
            cancelButtonText: "Cancel",
            reverseButtons: true
        });

        if (!confirmation.isConfirmed) return;

        try {
            const response = await fetch("/admin/removeCatOffer", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ categoryId: categoryId })
            });

            const result = await response.json();

            if (result.success) {
                Swal.fire({
                    title: "Success!",
                    text: result.message,
                    icon: "success",
                    confirmButtonText: "OK"
                }).then(() => {
                    window.location.reload();
                });
            } else {
                Swal.fire({
                    title: "Error!",
                    text: result.message || "Failed to remove offer.",
                    icon: "error",
                    confirmButtonText: "OK"
                });
            }
        } catch (error) {
            console.error("Error removing offer:", error);
            Swal.fire({
                title: "Error!",
                text: "Something went wrong. Please try again.",
                icon: "error",
                confirmButtonText: "OK"
            });
        }
    }


 
    async function handelFormSubmit(event) {
  event.preventDefault(); 

  const nameInput = document.getElementById("product_name");
  const descriptionInput = document.getElementById("descriptionId");

  const nameError = document.getElementById("name-error");
  const descriptionError = document.getElementById("description-error");

  let isValid = true;

  if (nameInput.value.trim() === "") {
    nameError.textContent = "Name is required.";
    isValid = false;
  } else {
    nameError.textContent = "";
  }

  if (descriptionInput.value.trim() === "") {
    descriptionError.textContent = "Description is required.";
    isValid = false;
  } else {
    descriptionError.textContent = "";
  }

  if (!isValid) return;

  const formData = {
    name: nameInput.value.trim(),
    description: descriptionInput.value.trim(),
  };

  try {

    const response = await fetch("/admin/addcategory", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(formData),
    });

    const result = await response.json();

    if (result.success) {
      Swal.fire({
        icon: "success",
        title: "Success!",
        text: "Category created successfully!",
        confirmButtonColor: "#3085d6",
      });

      nameInput.value = "";
      descriptionInput.value = "";
    } else {
      Swal.fire({
        icon: "info",
        title: "Info",
        text: result.message || "Something went wrong!",
        confirmButtonColor: "#d33",
      });
    }
  } catch (error) {
    console.error("Error:", error);
    Swal.fire({
      icon: "error",
      title: "Error",
      text: "Failed to create category. Please try again.",
      confirmButtonColor: "#d33",
    });
  }
}

document.getElementById("product_name").addEventListener("input", () => {
  document.getElementById("name-error").textContent = "";
});

document.getElementById("descriptionId").addEventListener("input", () => {
  document.getElementById("description-error").textContent = "";
});


function confirmAction(categoryId, action) {
    Swal.fire({
        title: `Are you sure?`,
        text: `Do you want to ${action} this category?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: `Yes, ${action}`,
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            const url = action === 'list' 
                ? `/admin/unlistCategory?id=${categoryId}` 
                : `/admin/listCategory?id=${categoryId}`;

            fetch(url, { method: 'GET' })
                .then(response => {
                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: `Category has been ${action}ed successfully!`,
                            timer: 1500,
                            showConfirmButton: false
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Failed to update category status'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!'
                    });
                });
        }
    });
}


  </script>
<%- include("../partials/admin/admin-footer")Â %>

