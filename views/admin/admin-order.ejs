<%- include("../partials/admin/admin-header") %>

<style>
/* General Styles */
body {
  overflow-x: hidden;
  padding-left: 100px;
  padding-top: 50px;
}

/* Table */
.table {
  width: 100%;
  table-layout: fixed;
}

/* Card Styling */
.card {
  border-radius: 12px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  background: #ffffff;
  margin-bottom: 20px;
}

.card-header {
  color: #343a40;
  background: #f8f9fa;
  padding: 10px;
  text-align: center;
  font-size: 18px;
  font-weight: bold;
  border-radius: 12px 12px 0 0;
}

/* Sidebar Styling */
.dashboard-menu {
  background-color: #ffffff;
  border-radius: 12px;
  padding: 20px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  height: 350px;
  width: 290px;
  margin-left: 15px;
  flex: 0 0 290px;
}

.dashboard-menu .nav-link {
  font-weight: bold;
  color: #2c3e50;
  padding: 10px 15px;
  border-radius: 8px;
  transition: all 0.3s ease-in-out;
}

.dashboard-menu .nav-link:hover, 
.dashboard-menu .nav-link.active {
  background-color: #007bff;
  color: #ffffff;
  box-shadow: 0 4px 15px rgba(0, 123, 255, 0.4);
}

/* Layout */
.container {
  display: flex;
  justify-content: center;
}

.row {
  display: flex;
  align-items: flex-start;
  flex-wrap: nowrap;
  width: 100%;
}

/* Orders Sidebar */
.right {
  width: 100%;
  background: #ffffff;
  padding: 20px;
  border-radius: 12px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

/* Order Items */
.cart-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: #f8f9fa;
  padding: 15px;
  border-radius: 10px;
  margin-bottom: 15px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Order Image */
.cart-item img {
  width: 80px;
  height: 80px;
  border-radius: 8px;
  object-fit: cover;
}

/* Order Details */
.order-details {
  flex-grow: 1;
  padding-left: 15px;
}

.order-id {
  font-size: 14px;
  color: #333;
}

.cart-item-price {
  font-size: 16px;
  color: #d9534f;
  font-weight: bold;
}

/* Order Status */
.order-status {
  margin-top: 5px;
  margin-bottom: 5px;
  display: inline-block;
  padding: 3px 7px;
  border-radius: 6px;
  text-align: center;
  font-size: 12px;
  color: white;
}

.order-status.pending {
  background-color: orange;
}

.order-status.shipped {
  background-color: blue;
}

.order-status.delivered {
  background-color: green;
}

.order-status.cancelled {
  background-color: red;
}

/* View Order Button */
.view-order {
  padding: 8px 16px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background 0.3s ease-in-out;
}

.view-order:hover {
  background-color: #0056b3;
}

/* No Orders Message */
.no-orders {
  text-align: center;
  padding: 20px;
  font-size: 16px;
  color: #555;
}

.order-status-dropdown {
  width: 200px; /* Adjust width as needed */
  padding: 8px 12px;
  font-size: 16px;
  border: 2px solid #007bff;
  border-radius: 5px;
  background-color: white;
  color: #333;
  cursor: pointer;
  outline: none;
  transition: all 0.3s ease-in-out;
}

.order-status-dropdown:hover {
  border-color: #0056b3;
}

.order-status-dropdown:focus {
  border-color: #004085;
  box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
}

.order-status-dropdown option {
  background-color: white;
  color: #333;
  font-size: 14px;
}

.order-status-dropdown option:checked {
  background-color: #007bff;
  color: white;
}


</style>

<main class="main">
  <section class="pt-10 pb-10" style="margin-top: 50px; margin-bottom: 50px; margin-left: 160px;">
    <div class="container">
      <div class="row">
        <div class="right" style="margin-left: 20px;">
          <div class="card-header">
            <h5 class="mb-0">Orders</h5>
          </div>
          <% if (orders && orders.length > 0) { %>
            <% for(let i = 0; i < orders.length; i++) { %>
              <div class="cart-item">
                <img class="order-image" src="/uploads/resized-images/<%= orders[i].image %>" alt="Product Image">
                <div class="order-details">
                  <p class="order-id"><strong>Order ID:</strong> <%= orders[i].orderId %></p>
                  <p id="status-<%= orders[i].orderId %>" class="order-status <%= orders[i].status.toLowerCase() %>">
                    <%= orders[i].status %>
                  </p>                                  
                  <p class="cart-item-price"><strong>Total:</strong> â‚¹<span id="unit-price"><%= orders[i].total %></span></p>
                </div>
                <select class="order-status-dropdown" data-order-id="<%= orders[i].orderId %>" style="margin-right: 10px">
                  <option value="pending" <%= orders[i].status === 'pending' ? 'selected' : '' %>>Pending</option>
                  <option value="shipped" <%= orders[i].status === 'shipped' ? 'selected' : '' %>>Shipped</option>
                  <option value="delivered" <%= orders[i].status === 'delivered' ? 'selected' : '' %>>Delivered</option>
                  <option value="cancelled" <%= orders[i].status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
                </select>
                <a class="view-order" href="/admin/order-details?id=<%= orders[i].orderId %>">View</a>
              </div>
            <% } %>
          <% } else { %>
            <div class="no-orders">
              <p>No orders</p>
            </div>
          <% } %>
        </div>
      </div>
    </div>
  </section>
</main>

<script>
document.querySelectorAll('.order-status-dropdown').forEach(dropdown => {
  dropdown.addEventListener('focus', function () {
    this.setAttribute('data-previous-status', this.value);
  });

  dropdown.addEventListener('change', function () {
    const orderId = this.getAttribute('data-order-id');
    const newStatus = this.value;
    const previousStatus = this.getAttribute('data-previous-status'); 

    Swal.fire({
      title: "Are you sure?",
      text: `You are about to change the order status to "${newStatus}".`,
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#007bff",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, change it!"
    }).then((result) => {
      if (result.isConfirmed) {
        fetch('/admin/updateOrderStatus', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ orderId, newStatus: newStatus })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            Swal.fire({
              title: "Updated!",
              text: data.message,
              icon: "success",
              confirmButtonColor: "#28a745"
            });
            dropdown.setAttribute('data-previous-status', newStatus); 

              const statusElement = document.getElementById(`status-${orderId}`);
              statusElement.innerText = newStatus;
              statusElement.className = `order-status ${newStatus.toLowerCase()}`;

          } else {
            Swal.fire({
              title: "Error!",
              text: data.message,
              icon: "error",
              confirmButtonColor: "#d33"
            });
            dropdown.value = previousStatus; 
          }
        })
        .catch(error => {
          Swal.fire({
            title: "Oops!",
            text: "Something went wrong. Please try again later.",
            icon: "error",
            confirmButtonColor: "#d33"
          });
          dropdown.value = previousStatus; 
        });
      } else {
        dropdown.value = previousStatus; 
      }
    });
  });
});
</script>

<%- include("../partials/admin/admin-footer") %>
