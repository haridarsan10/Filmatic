<%- include("../partials/admin/admin-header") %>

<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">

    <style>
        /* General Styles */
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f4f6f9;
            color: #333;
            padding-left: 280px;
            padding-right: 50px;
            padding-bottom: 500px;
        }

        .content-header {
            background-color: #fff;
            padding: 20px;
            border-bottom: 1px solid #ddd;
        }

        .content-title {
            font-size: 24px;
            color: #4a4a4a;
        }

        .input-group {
            width: 100%;
            max-width: 500px;
            margin: 0 auto;
            margin-top: 10px;
        }

        .input-group input {
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 25px;
        }

        .input-group button {
            background-color: #4caf50;
            color: white;
            padding: 10px 20px;
            border-radius: 25px;
            border: none;
            cursor: pointer;
        }

        .input-group button:hover {
            background-color: #45a049;
        }

        .right {
            margin-top: 30px;
        }

        table {
            width: 100%;
            margin-top: 20px;
            border-collapse: collapse;
            background-color: #fff;
            border-radius: 8px;
            overflow: hidden;
        }

        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #4caf50;
            color: white;
        }

        td button {
            padding: 5px 10px;
            margin: 5px;
            font-size: 12px;
            border-radius: 5px;
            text-decoration: none;
        }

        td button a {
            color: white;
            text-decoration: none;
        }

        td button:hover {
            opacity: 0.8;
        }
    
        .btn-info {
            background-color: #17a2b8;
        }

        .btn-danger {
            background-color: #dc3545;
        }

        .btn-success {
            background-color: #28a745;
        }

        .btn-info:hover {
            background-color: #138496;
        }

        .btn-danger:hover {
            background-color: #c82333;
        }

        .btn-success:hover {
            background-color: #218838;
        }

        .table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 2rem;
}

.table th, .table td {
    padding: 1rem;
    text-align: left;
    border: 1px solid #e5e7eb; /* Border color for all cells */
}

.table th {
    background: #f9fafb;
    font-weight: 600;
    color: #4b5563;
}

.table td {
    background: #f3f4f6;
    color: #4b5563;
}

.table tr:last-child td {
    border-bottom: none; /* No border for the last row */
}

.table tr:hover {
    background: #e5e7eb;
}


        @media (max-width: 768px) {
            .input-group {
                width: 100%;
                margin-left: 0;
            }

            table {
                font-size: 12px;
            }

            th, td {
                padding: 10px;
            }

            td button {
                font-size: 10px;
                padding: 5px;
            }
        }

        .pagination {
    display: flex;
    justify-content: center; /* Center it horizontally */
    align-items: center; /* Align it vertically */
    padding: 10px 0; /* Add some space around */
    gap: 5px; /* Space between the buttons */
    margin-left: 20px; /* Slightly move the pagination to the right */
}

.pagination .page-item {
    list-style: none;
}

.pagination .page-item a {
    display: block;
    padding: 8px 12px;
    font-size: 14px;
    color: #007bff; /* Default color */
    text-decoration: none;
    border: 1px solid #ddd; /* Border for buttons */
    border-radius: 4px; /* Rounded corners */
    background-color: #fff; /* Button background */
    transition: all 0.3s ease; /* Smooth hover effect */
}

.pagination .page-item a:hover {
    background-color: #007bff; /* Change on hover */
    color: #fff; /* Text color on hover */
    border-color: #007bff; /* Border color on hover */
}

.pagination .page-item.active a {
    background-color: #4caf50; /* Active button color */
    color: white;
    border-color: #4caf50;
    pointer-events: none; /* Disable click on active button */
}

.add-coupon {
    background-color: #4CAF50; /* Green */
    color: white;
    border: none;
    padding: 10px 20px;
    font-size: 16px;
    cursor: pointer;
    border-radius: 5px;
    transition: background 0.3s ease-in-out;
}

.add-coupon:hover {
    background-color: #45a049; /* Darker green on hover */
}

.add-coupon-div {
    display: flex;
    justify-content: flex-end; /* Aligns button to the right */
    padding: 10px;
}


    /* Modal Background */
    #myModal {
        display: none; /* Hidden by default */
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5); /* Dark overlay */
        overflow-y: auto; /* Allows scrolling if modal content is too large */
    }

    /* Modal Content Box */
    .modal-content {
        background: white;
        width: 90%;
        max-width: 500px; /* Limits max width */
        margin: 50px auto; /* Centers the modal */
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
        position: relative;
        animation: fadeIn 0.3s ease-in-out;
    }

    /* Close Button */
    .close {
        position: absolute;
        top: 10px;
        right: 15px;
        font-size: 20px;
        cursor: pointer;
        color: #555;
    }

    .close:hover {
        color: red;
    }

    /* Form Inputs */
    input, select {
        width: 100%;
        padding: 10px;
        margin: 5px 0;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    /* Error Messages */
    .error {
        color: red;
        font-size: 0.9em;
        display: block;
        margin-top: -5px;
    }

    /* Submit Button */
    .mybtn {
        width: 100%;
        padding: 10px;
        background: #28a745;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        margin-top: 10px;
    }

    .mybtn:hover {
        background: #218838;
    }

    /* Fade In Animation */
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(-20px); }
        to { opacity: 1; transform: translateY(0); }
    }


    .submit-btn{
        width: 100%;
        padding: 10px;
        background: #28a745;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        margin-top: 10px;
    }

    </style>

</head>
<div class="content-header">
    <div>
        <h2 class="content-title card-title">Products</h2>
    </div>
</div>
<header class="card-header mb-20">
    <div class="d-flex align-items-center justify-content-between" style="width: 100%;">
        <!-- Search Bar -->
        <form action="" method="get" class="d-flex">
            <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px;">
                <input type="text" class="form-control border-0 rounded-pill" placeholder="Search products or brands" name="search">
                <button class="btn border-0" type="submit">Search</button>
            </div>
        </form>

        <!-- Add Coupon Button -->
        <button id="myBtn" class="add-coupon">Add new Coupon</button>
    </div>
</header>


<div class="right mt-5">
    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col"><b>Coupon Code</b></th>
                <th scope="col"><b>Discount(%)</b></th>
                <th scope="col"><b>Max Purchase</b></th>
                <th scope="col"><b>Max Discount</b></th>
                <th scope="col"><b>validFrom</b></th>
                <th scope="col"><b>validTo</b></th>
                <th scope="col"><b>Limit</b></th>
                <th scope="col"><b>Active</b></th>
                <th scope="col"><b>Action</b></th>
            </tr>
        </thead>

        <thead>
            <tbody>
                <% for(let i=couponData.length-1;i>=0;i--) {%>
                <tr>
                    <td><%=couponData[i].code %></td>
                    <td><%=couponData[i]?.discount %></td>
                    <td><%=couponData[i].minPurchase %></td>
                    <td><%=couponData[i].maxDiscount %></td>
                    <td><%= new Date(couponData[i].validFrom).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></td>
                    <td><%= new Date(couponData[i].validTo).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></td>                    
                    <td><%=couponData[i].usageLimit %></td>
                    <td><%=couponData[i].isActive %></td>

                    <!-- <td>
                    
                        <button class="btn btn-info" onclick="" style="width: 100px;">
                            <a href="#" class="text-white">Add Offer</a>
                        </button>
            
                        <button class="btn btn-info" onclick="" style="width: 100px;">
                            <a href="#" class="text-white">Remove</a>
                        </button>
                    
                    </td> -->
                    <!-- <td></td> -->
                    <td>
                        <% if(couponData[i].isActive===true) { %>
                        <button class="btn btn-danger" style="width: 80px;">
                            <a href="/admin/blockCoupon?id=<%=couponData[i]._id %>" class="text-white" style="text-decoration: none;">Block</a>
                        </button>
                        <% }else{ %>
                        <button class="btn btn-success" style="width: 80px;">
                            <a href="/admin/unblockCoupon?id=<%=couponData[i]._id %>" class="text-white" style="text-decoration: none;">Unblock</a>
                        </button>
                        <% } %>
                    </td>
                </tr>
                <% } %>
            </tbody>
        </thead>


    </table>
</div>



<!-- Modal -->
<div id="myModal" style="display: none;">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Add Coupon</h2>

        <!-- Coupon Form -->
        <form id="couponForm">
            <!-- Coupon Code -->
            <label for="code">Coupon Code:</label>
            <input type="text" id="code" name="code">
            <span id="codeError" class="error"></span>

            <!-- Discount Amount -->
            <label for="discount">Discount (%):</label>
            <input type="number" id="discount" name="discount">
            <span id="discountError" class="error"></span>

            <!-- Discount Type -->
            <!-- <label for="discountType">Discount Type:</label>
            <select id="discountType" name="discountType">
                <option value="percentage">Percentage </option>
                <option value="fixed">Fixed Amount</option>
            </select> -->

            <!-- Minimum Purchase -->
            <label for="minPurchase">Minimum Purchase Amount:</label>
            <input type="number" id="minPurchase" name="minPurchase">
            <span id="minPurchaseError" class="error"></span>

            <!-- Maximum Discount -->
            <label for="maxDiscount">Maximum Discount:</label>
            <input type="number" id="maxDiscount" name="maxDiscount">
            <span id="maxDiscountError" class="error"></span>

            <!-- Valid From Date -->
            <label for="validFrom">Valid From:</label>
            <input type="date" id="validFrom" name="validFrom">
            <span id="validFromError" class="error"></span>

            <!-- Valid To Date -->
            <label for="validTo">Valid To:</label>
            <input type="date" id="validTo" name="validTo">
            <span id="validToError" class="error"></span>

            <!-- Usage Limit -->
            <label for="usageLimit">Usage Limit:</label>
            <input type="number" id="usageLimit" name="usageLimit">
            <span id="usageLimitError" class="error"></span>

            <!-- Submit Button -->
            <button class="submit-btn" type="submit">Add Coupon</button>
        </form>
    </div>
</div>




 
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<script>

// Get the modal, button, and close elements
var modal = document.getElementById("myModal");
var span = document.getElementsByClassName("close")[0];
var btn = document.getElementById("myBtn");

// Form and error display elements
const couponForm = document.getElementById("couponForm");
const codeError = document.getElementById("codeError");
const discountError = document.getElementById("discountError");
const validFromError = document.getElementById("validFromError");
const validToError = document.getElementById("validToError");
const usageLimitError = document.getElementById("usageLimitError");
const minPurchaseError = document.getElementById("minPurchaseError");
const maxDiscountError = document.getElementById("maxDiscountError");


// Open Modal
btn.onclick = function() {
    modal.style.display = "block";
}

// Close Modal
function closeModal() {
    modal.style.display = "none";
}

// Close modal when clicking outside
window.onclick = function(event) {
    if (event.target == modal) {
        closeModal();
    }
}

span.onclick = closeModal;

// Form Validation and Submission
couponForm.onsubmit = function(event) {
    event.preventDefault(); // Prevent form from submitting normally

    // Clear previous errors
    codeError.textContent = '';
    discountError.textContent = '';
    validFromError.textContent = '';
    validToError.textContent = '';
    usageLimitError.textContent = '';
    minPurchaseError.textContent = '';
    maxDiscountError.textContent = '';


    let isValid = true;

    // Validate Coupon Code (uppercase and alphanumeric)
    const code = document.getElementById("code").value;
    const codePattern = /^[A-Z0-9]+$/;
    if (!code.match(codePattern)) {
        codeError.textContent = "Coupon code must be uppercase and alphanumeric.";
        isValid = false;
    }

    // Validate Discount (positive number)
    const discount = parseFloat(document.getElementById("discount").value.trim());

        if (isNaN(discount) || discount <= 0 || discount > 100) {
            discountError.textContent = "Discount must be a number between 1 and 100.";
            isValid = false;
        } else {
            discountError.textContent = "";
        }



    // Validate Valid From and Valid To (Valid date range)
    const validFrom = new Date(document.getElementById("validFrom").value);
    const validTo = new Date(document.getElementById("validTo").value);
    if (isNaN(validFrom) || isNaN(validTo) || validFrom >= validTo) {
        validFromError.textContent = "Valid 'From' date should be earlier than 'To' date.";
        validToError.textContent = "Valid 'From' date should be earlier than 'To' date.";
        isValid = false;
    }

    // Validate Usage Limit (positive integer)
    const usageLimit = parseInt(document.getElementById("usageLimit").value);
    if (usageLimit < 1 || isNaN(usageLimit)) {
        usageLimitError.textContent = "Usage limit must be at least 1.";
        isValid = false;
    }

    const minPurchase = document.getElementById("minPurchase").value.trim();
    const minPurchaseValue = minPurchase ? parseFloat(minPurchase) : null;
    if (minPurchaseValue === null || minPurchaseValue < 0 || isNaN(minPurchaseValue)) {
        minPurchaseError.textContent = "Minimum purchase amount must be a positive number.";
        isValid = false;
    }

    const maxDiscountValue = document.getElementById("maxDiscount").value.trim();
    if (!maxDiscountValue) {
        maxDiscountError.textContent = "Maximum discount is required.";
        isValid = false;
    } else {
        const maxDiscount = parseFloat(maxDiscountValue);
        if (maxDiscount <= 0 || isNaN(maxDiscount)) {
            maxDiscountError.textContent = "Maximum discount must be a positive number.";
            isValid = false;
        }
    }

    // Function to clear error messages when user starts typing
        function clearErrorOnInput(inputId, errorId) {
            document.getElementById(inputId).addEventListener("input", function () {
                document.getElementById(errorId).textContent = ""; // Clear error message
            });
        }

        // Apply the function to all fields
        clearErrorOnInput("code", "codeError");
        clearErrorOnInput("discount", "discountError");
        clearErrorOnInput("validFrom", "validFromError");
        clearErrorOnInput("validTo", "validToError");
        clearErrorOnInput("usageLimit", "usageLimitError");
        clearErrorOnInput("minPurchase", "minPurchaseError");
        clearErrorOnInput("maxDiscount", "maxDiscountError");



    if (isValid) {
        // Prepare the data for submission
        const formData = {
            code: code,
            discount: discount,
            minPurchase: parseFloat(document.getElementById("minPurchase").value) || 0,
            maxDiscount: document.getElementById("maxDiscount").value ? parseFloat(document.getElementById("maxDiscount").value) : null,
            validFrom: validFrom.toISOString(),
            validTo: validTo.toISOString(),
            usageLimit: usageLimit,
        };

        // Send data using fetch
        fetch('/admin/add-coupon', {
            method: 'post',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
            },
            body: JSON.stringify(formData),
        })
        .then((response) => response.json())
        .then((data) => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: data.message,
                    showConfirmButton: false,
                    timer: 1500
                });

                setTimeout(() => {
                    closeModal(); 
                    couponForm.reset(); // Reset form fields after success
                    window.location.reload()
                }, 1500);
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message || 'Failed to add coupon.',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An unexpected error occurred.',
                showConfirmButton: false,
                timer: 1500
            });
        });
    }
}


</script>

<%- include("../partials/admin/admin-footer") %>
