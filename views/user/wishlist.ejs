<%- include("../../views/partials/user/header") %>

<style>
  .cart-item {
    background: #f8f8f8;
    padding: 20px;
    border-radius: 10px;
    }

    .cart-product {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .cart-product-image {
        width: 80px;
        height: 80px;
    }

    .cart-product-details {
        flex: 1;
    }

    .quantity-selector {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .quantity-selector input {
        width: 40px;
        text-align: center;
    }

    .summary-table {
        list-style: none;
        padding: 0;
    }

    .summary-table li {
        display: flex;
        justify-content: space-between;
        font-size: 16px;
        padding: 5px 0;
    }

    .checkout-btn a {
        display: block;
        text-align: center;
        padding: 10px;
        background: black;
        color: white;
        border-radius: 5px;
        text-decoration: none;
    }

    .cart-item-details {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .cart-item-quantity {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px; /* Adds space between buttons and input */
        border: 1px solid #ddd; /* Light border around the quantity selector */
        padding: 5px;
        border-radius: 5px;
    }

    .cart-item-quantity button {
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 16px;
        border-radius: 5px;
    }

    .cart-item-quantity input {
        width: 50px;
        text-align: center;
        font-weight: bold;
        border: none;
        outline: none;
        background: transparent;
    }


    .add-item {
    border: 2px solid #007bff;  /* Blue border */
    color: #007bff;  /* Blue text */
    background: transparent;  /* No background */
    padding: 5px 10px;  /* Slightly bigger padding for better appearance */
    font-size: 14px;
    font-weight: 600;  /* Make text slightly bolder */
    border-radius: 8px;  /* Rounded corners */
    cursor: pointer;
    transition: all 0.3s ease-in-out;
    }

    /* Hover Effect */
    .add-item:hover {
        color: white;  /* White text */
        background: #007bff;  /* Blue background */
        border-color: #0056b3;  /* Slightly darker blue border */
        transform: scale(1.05);  /* Slight zoom effect */
    }

    /* Active (Clicked) Effect */
    .add-item:active {
        transform: scale(0.98);  /* Slight shrink on click */
    }


        .breadcrumb-container {
          font-size: 14px;
        }

.breadcrumb {
  list-style: none;
  display: flex;
  align-items: center;
  padding-left: 50px;
}

.breadcrumb li {
  display: flex;
  align-items: center;
}

.breadcrumb a {
  text-decoration: none;
  color: #007bff;
  font-weight: 500;
  transition: color 0.3s ease;
}

.breadcrumb a:hover {
  color: #0056b3;
}

.breadcrumb span {
  margin: 0 8px;
  color: #555;
}
</style>

<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/">Home</a></li>
    <!-- <li class="breadcrumb-item"><a href="/userProfile"></a></li> -->
    <!-- <li class="breadcrumb-item"><a href="/shop">Shop</a></li> -->
    <li class="breadcrumb-item active" aria-current="page">Wishlist</li>
  </ol>
</nav>



<div class="checkout_area section-padding-80">
  <div class="container">
      <div class="row">

          <div class="col-12 col-md-12 col-lg-12">

            <div class="shopping-cart">
              <% if (wishlist && wishlist.items.length > 0) { %>
                  <% for (let i = 0; i < wishlist.items.length; i++) { %>
                      <div class="cart-item d-flex align-items-center justify-content-between p-3 border-bottom" id="wishlist-item-<%= i %>">
                          
                          <!-- Product Image -->
                          <img src="/uploads/resized-images/<%= wishlist.items[i].productId.productImage[0] %>" 
                               alt="Product Image" class="cart-item-image" style="width: 120px; height: auto; border-radius: 5px;">
          
                          <!-- Product Details -->
                          <div class="d-flex flex-column" style="flex: 1; margin-left: 20px;">
                              <h6 style="font-weight: bold; margin: 0;"><%= wishlist.items[i].productId.productName %></h6>
                              <p class="cart-item-price mb-0 text-muted">₹<span id="unit-price"><%= wishlist.items[i].productId.salePrice %></span></p>
                              <p class="cart-item-status mb-0" 
                              style="font-size: 14px; font-weight: bold; color: <%= wishlist.items[i].productId.status === 'In stock' ? 'green' : 'red' %>;"><%= wishlist.items[i].productId.status %></p>
                          </div>
          
                          <!-- Buttons (Add to Cart & Remove) -->
                          <div class="d-flex gap-3">
                              <button onclick="addToCart('<%= wishlist.items[i].productId._id %>')" class="add-item" style="margin-right: 20px;">Add To Cart</button>
                              <button class="remove-item btn btn-sm" onclick="removeWishlist('<%= wishlist.items[i].productId._id %>')">
                                  <i class="fas fa-trash-alt"></i>
                              </button>
                          </div>
          
                      </div>
                  <% } %>
              <% } else { %>
                  <div class="empty-cart text-center">
                      <h5>Your wishlist is empty.</h5>
                      <p>Browse our products and add items to your wishlist.</p>
                  </div>
              <% } %>
          </div>
              
              <a style="margin-top: 30px;" href="/shop" class="btn essence-btn">Continue Shopping</a>

          </div>

      </div>
  </div>
</div>

<script>

    async function addToWishlist(productId) {

    try {
        const response=await fetch('/addToWishlist',{
        method:'POST',
        headers: {'Content-Type': 'application/json'},
        body:JSON.stringify({productId:productId})
        })

        const data=await response.json()

        if (!data.success && data.redirectUrl) {
            window.location.href = data.redirectUrl;
            return;
        }


        if(data.success){
            Toastify({
            text: "Added Wishlist",
            duration: 2000,
            gravity: "top",
            position: "right",
            backgroundColor: "green",
            stopOnFocus: true
        }).showToast();
        }
        else{
            Toastify({
            text: data.message,
            duration: 2000,
            gravity: "top",
            position: "right",
            backgroundColor: "red",
            stopOnFocus: true
        }).showToast();
        }
      }


      catch (error) {
          console.error('Error:', error);
              Toastify({
                  text: "Something went wrong. Please try again.",
                  duration: 2000,
                  gravity: "top",
                  position: "right",
                  backgroundColor: "red",
                  stopOnFocus: true
              }).showToast();      
      }
}


        async function addToCart(productId) {
            try {
                const response = await fetch('/addToCart', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productId: productId, quantity: 1 })
                });

                const data = await response.json();

                if (!data.success && data.redirectUrl) {
                    window.location.href = data.redirectUrl;
                    return;
                }

                if (data.success) {
                    Toastify({
                        text: "Added to Cart",
                        duration: 2000,
                        gravity: "top",
                        position: "right",
                        backgroundColor: "green",
                        stopOnFocus: true
                    }).showToast();

                    const removeResponse = await fetch('/removeWishlist', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ productId: productId })
                    });

                    const removeData = await removeResponse.json();

                    if (removeData.success) {
                        console.log("Item removed from Wishlist");

                        setTimeout(() => {
                            window.location.reload();
                        }, 1000);
                    } else {
                        console.error("Failed to remove from Wishlist:", removeData.message);
                    }
                } else {
                    Toastify({
                        text: data.message,
                        duration: 2000,
                        gravity: "top",
                        position: "right",
                        backgroundColor: "red",
                        stopOnFocus: true
                    }).showToast();
                }

            } catch (error) {
                console.error("Error:", error);
                Toastify({
                    text: "Something went wrong. Please try again.",
                    duration: 2000,
                    gravity: "top",
                    position: "right",
                    backgroundColor: "red",
                    stopOnFocus: true
                }).showToast();
            }
        }



        async function removeWishlist(productId) {
          try {

              const result = await Swal.fire({
                  title: "Are you sure?",
                  text: "Do you really want to remove this item from your wishlist?",
                  icon: "warning",
                  showCancelButton: true,
                  confirmButtonColor: "#d33",
                  cancelButtonColor: "#3085d6",
                  confirmButtonText: "Yes, remove it!",
                  cancelButtonText: "Cancel"
              });

              if (result.isConfirmed) { 
                  const response = await fetch('/removeWishlist', {
                      method: 'POST',
                      headers: { 'Content-Type': 'application/json' },
                      body: JSON.stringify({ productId: productId })
                  });

                  if (!response.ok) {
                      throw new Error('Failed to remove item');
                  }

                  const data = await response.json();

                  if (data.success) {

                      await Swal.fire({
                          icon: 'success',
                          title: 'Success',
                          text: 'Item removed from Wishlist',
                          showConfirmButton: data.showConfirmButton,
                          timer: 1500
                      });

                      window.location.reload()
                    
                  } else {
                      throw new Error('Failed to delete item');
                  }
              }

          } catch (error) {
              Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: error.message || 'Something went wrong. Please try again.'
              });
          }
      }





</script>


<%- include("../../views/partials/user/footer") %>
